{"version":3,"file":"js/app.7bdef298.js","mappings":"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","sources":["webpack://dubbo-benchmark/./src/App.vue","webpack://dubbo-benchmark/./src/components/PullRequest.vue","webpack://dubbo-benchmark/src/components/PullRequest.vue","webpack://dubbo-benchmark/./src/components/PullRequest.vue?000a","webpack://dubbo-benchmark/./src/components/PullRequest.vue?6275","webpack://dubbo-benchmark/./src/components/ScheduledTask.vue","webpack://dubbo-benchmark/src/components/ScheduledTask.vue","webpack://dubbo-benchmark/./src/components/ScheduledTask.vue?bf54","webpack://dubbo-benchmark/./src/components/ScheduledTask.vue?4e4b","webpack://dubbo-benchmark/./src/components/TraceDetail.vue","webpack://dubbo-benchmark/src/components/TraceDetail.vue","webpack://dubbo-benchmark/./src/components/TraceDetail.vue?6517","webpack://dubbo-benchmark/./src/components/TraceDetail.vue?7300","webpack://dubbo-benchmark/./src/components/RpcTask.vue","webpack://dubbo-benchmark/src/components/RpcTask.vue","webpack://dubbo-benchmark/./src/components/RpcTask.vue?1335","webpack://dubbo-benchmark/./src/components/RpcTask.vue?be42","webpack://dubbo-benchmark/./src/components/SerializationTask.vue","webpack://dubbo-benchmark/src/components/SerializationTask.vue","webpack://dubbo-benchmark/./src/components/SerializationTask.vue?4972","webpack://dubbo-benchmark/./src/components/SerializationTask.vue?3f6c","webpack://dubbo-benchmark/src/App.vue","webpack://dubbo-benchmark/./src/App.vue?c036","webpack://dubbo-benchmark/./src/App.vue?0e40","webpack://dubbo-benchmark/./src/main.js","webpack://dubbo-benchmark/webpack/bootstrap","webpack://dubbo-benchmark/webpack/runtime/chunk loaded","webpack://dubbo-benchmark/webpack/runtime/compat get default export","webpack://dubbo-benchmark/webpack/runtime/define property getters","webpack://dubbo-benchmark/webpack/runtime/global","webpack://dubbo-benchmark/webpack/runtime/hasOwnProperty shorthand","webpack://dubbo-benchmark/webpack/runtime/make namespace object","webpack://dubbo-benchmark/webpack/runtime/jsonp chunk loading","webpack://dubbo-benchmark/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('el-row',[_c('el-col',{attrs:{\"span\":12}},[_c('PullRequest')],1),_c('el-col',{attrs:{\"span\":12}},[_c('ScheduledTask')],1)],1),_c('el-row',[_c('el-col',{attrs:{\"span\":12}},[_c('RpcTask')],1),_c('el-col',{attrs:{\"span\":12}},[_c('SerializationTask')],1)],1),_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('TraceDetail')],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"PullRequest\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <div id=\"PullRequest\" style=\"width:100%;height:400px\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'PullRequest',\n  mounted() {\n    this.myEcharts();\n  },\n  methods: {\n    myEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      const myChart = this.$echarts.init(document.getElementById('PullRequest'));\n\n// const rpc = replaceVariables('$rpc');\n// const serialization = replaceVariables('$serialization');\n// console.log(rpc)\n// console.log(serialization)\n\n// 获取JMH结果字符串\n      let jmh;\n\n      this.$.ajax({\n        type: \"GET\",\n        async: false,\n        url: \"https://raw.githubusercontent.com/wxbty/jmh_result/main/test-results/pr/merged_results.json\",\n        success: function (res) {\n          jmh = res\n        }\n      });\n\n// let filterSerialization = [\"hessian2\"]\n\n// let filterProtocol = [\"dubbo\"]\n\n// filterSerialization = serialization.replace(/{/g, '').replace(/}/g, '').split(',')\n// filterProtocol = rpc.replace(/{/g, '').replace(/}/g, '').split(',')\n\n\n// console.log(jmh);\n// 解析JMH结果字符串为JSON对象\n      let resultList;\n      try {\n        resultList = JSON.parse(jmh);\n      } catch (error) {\n        console.error(\"解析JMH结果字符串出错：\", error);\n        return\n      }\n\n// 转换数据结构，按serialization属性分类并收集Item对象\n      let collect = resultList\n          .filter(a => a.mode === 'avgt')\n          // .filter(a => a.params['dubbo.protocol.serialization'] === 'hessian2')\n          // .filter(a => filterSerialization.includes(a.params.serialization) && filterProtocol.includes(a.params.protocol))\n          .reduce((acc, result) => {\n            let {time, serialization, protocol} = result.params;\n            let item = {\n              time: Number(time),\n              score: Math.round(result.primaryMetric.score),\n              serialization: serialization,\n              protocol: protocol\n            };\n            let key = protocol + \"-\" + serialization;\n            if (!acc[key]) {\n              acc[key] = [];\n            }\n            acc[key].push(item);\n            return acc;\n          }, {});\n\n// 创建一个存储Template对象的数组\n      let templateList = {};\n\n      Object.entries(collect).forEach(([key, items]) => {\n        // 按时间升序排序\n        let sortedItems = items.sort((a, b) => a.time - b.time);\n\n        templateList[key] = {\n          time: sortedItems.map(i => i.time),\n          score: sortedItems.map(i => i.score)\n        };\n      });\n\n// 使用时间类型的轴\n//       let xAxisData = Array.from(new Set([].concat(...Object.values(templateList).map(obj => obj.time)))).sort((a, b) => a - b);\n\n// 自定义时间轴的标签格式\n      function formatDate(timestamp) {\n        var date = new Date(timestamp);\n        return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n      }\n\n// 生成ECharts所需的series数据结构\n      let seriesData = Object.keys(templateList).map((key) => {\n        let data = templateList[key].time.map((time, index) => {\n          return {\n            name: formatDate(time),\n            value: [time, templateList[key].score[index]]\n          };\n        });\n        return {\n          name: key,\n          type: 'line',\n          showSymbol: true, // 显示标记点\n          hoverAnimation: false, // 关闭hover动画\n          symbolSize: 10, // 设置点的直径大小为10\n          markPoint: {\n            data: [\n              {type: 'max', name: 'Max'},\n              {type: 'min', name: 'Min'}\n            ]\n          },\n          markLine: {\n            data: [{type: 'average', name: 'Avg'}]\n          },\n          data: data\n        };\n      });\n\n// ECharts配置对象\n      let option = {\n        // animation: false,\n        title: {\n          text: 'PR情况',\n          x: 'center',\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: function (params) {\n            let res = params[0].axisValueLabel + '<br/>';\n            params.forEach(item => {\n              res += item.marker + \" \" + (item.data.value[1] !== null ? item.data.value[1] : '-') + 'ms<br/>';\n            });\n            return res;\n          }\n        },\n        // legend: {\n        //   data: Object.keys(templateList)\n        // },\n        grid: {\n          // top: '3%',\n          left: '3%',\n          right: '3%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'time',\n          boundaryGap: false\n        },\n        yAxis: {\n          type: 'value',\n          name: '耗时(ms)'\n        },\n        series: seriesData\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PullRequest.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PullRequest.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./PullRequest.vue?vue&type=template&id=6b5dee22&scoped=true\"\nimport script from \"./PullRequest.vue?vue&type=script&lang=js\"\nexport * from \"./PullRequest.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6b5dee22\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"ScheduledTask\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <div id=\"ScheduledTask\" style=\"width:100%;height:400px\"></div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'ScheduledTask',\n  mounted() {\n    this.myEcharts();\n  },\n  methods: {\n    myEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      const myChart = this.$echarts.init(document.getElementById('ScheduledTask'));\n\n// const rpc = replaceVariables('$rpc');\n// const serialization = replaceVariables('$serialization');\n// console.log(rpc)\n// console.log(serialization)\n\n// 获取JMH结果字符串\n      let jmh;\n      this.$.ajax({\n        type: \"GET\",\n        async: false,\n        url: \"https://raw.githubusercontent.com/wxbty/jmh_result/main/test-results/scheduled/merged_results.json\",\n        success: function (res) {\n          jmh = res\n        }\n      });\n\n// let filterSerialization = [\"hessian2\"]\n\n// let filterProtocol = [\"dubbo\"]\n\n// filterSerialization = serialization.replace(/{/g, '').replace(/}/g, '').split(',')\n// filterProtocol = rpc.replace(/{/g, '').replace(/}/g, '').split(',')\n\n\n// console.log(jmh);\n// 解析JMH结果字符串为JSON对象\n      let resultList;\n      try {\n        resultList = JSON.parse(jmh);\n      } catch (error) {\n        console.error(\"解析JMH结果字符串出错：\", error);\n        return\n      }\n\n// 转换数据结构，按serialization属性分类并收集Item对象\n      let collect = resultList\n          .filter(a => a.mode === 'avgt')\n          // .filter(a => a.params['dubbo.protocol.serialization'] === 'hessian2')\n          // .filter(a => filterSerialization.includes(a.params.serialization) && filterProtocol.includes(a.params.protocol))\n          .reduce((acc, result) => {\n            let {time, serialization, protocol} = result.params;\n            let item = {\n              time: Number(time),\n              score: Math.round(result.primaryMetric.score),\n              serialization: serialization,\n              protocol: protocol\n            };\n            let key = protocol + \"-\" + serialization;\n            if (!acc[key]) {\n              acc[key] = [];\n            }\n            acc[key].push(item);\n            return acc;\n          }, {});\n\n// 创建一个存储Template对象的数组\n      let templateList = {};\n\n      Object.entries(collect).forEach(([key, items]) => {\n        // 按时间升序排序\n        let sortedItems = items.sort((a, b) => a.time - b.time);\n\n        templateList[key] = {\n          time: sortedItems.map(i => i.time),\n          score: sortedItems.map(i => i.score)\n        };\n      });\n\n// 使用时间类型的轴\n//       let xAxisData = Array.from(new Set([].concat(...Object.values(templateList).map(obj => obj.time)))).sort((a, b) => a - b);\n\n// 自定义时间轴的标签格式\n      function formatDate(timestamp) {\n        var date = new Date(timestamp);\n        return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n      }\n\n// 生成ECharts所需的series数据结构\n      let seriesData = Object.keys(templateList).map((key) => {\n        let data = templateList[key].time.map((time, index) => {\n          return {\n            name: formatDate(time),\n            value: [time, templateList[key].score[index]]\n          };\n        });\n        return {\n          name: key,\n          type: 'line',\n          showSymbol: true, // 显示标记点\n          hoverAnimation: false, // 关闭hover动画\n          symbolSize: 10, // 设置点的直径大小为10\n          markPoint: {\n            data: [\n              {type: 'max', name: 'Max'},\n              {type: 'min', name: 'Min'}\n            ]\n          },\n          markLine: {\n            data: [{type: 'average', name: 'Avg'}]\n          },\n          data: data\n        };\n      });\n\n// ECharts配置对象\n      let option = {\n        // animation: false,\n        title: {\n          text: 'Schedule情况',\n          x: 'center',\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: function (params) {\n            let res = params[0].axisValueLabel + '<br/>';\n            params.forEach(item => {\n              res += item.marker + \" \" + (item.data.value[1] !== null ? item.data.value[1] : '-') + 'ms<br/>';\n            });\n            return res;\n          }\n        },\n        // legend: {\n        //   data: Object.keys(templateList)\n        // },\n        grid: {\n          // top: '3%',\n          left: '3%',\n          right: '3%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'time',\n          boundaryGap: false\n        },\n        yAxis: {\n          type: 'value',\n          name: '耗时(ms)'\n        },\n        series: seriesData\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScheduledTask.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScheduledTask.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ScheduledTask.vue?vue&type=template&id=15822182&scoped=true\"\nimport script from \"./ScheduledTask.vue?vue&type=script&lang=js\"\nexport * from \"./ScheduledTask.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"15822182\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-cascader',{attrs:{\"show-all-levels\":false,\"props\":_vm.props,\"options\":_vm.cascaderOptions,\"clearable\":\"\"},on:{\"change\":_vm.handleCascaderChange},model:{value:(_vm.selectedOptions),callback:function ($$v) {_vm.selectedOptions=$$v},expression:\"selectedOptions\"}}),_c('el-row',[_c('el-col',{attrs:{\"span\":12}},[_c('el-header',[_c('h1',[_vm._v(_vm._s(_vm.leftTableTitle))])]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.leftTableDate,\"row-key\":\"spanId_\",\"border\":\"\",\"lazy\":\"\",\"default-expand-all\":\"\",\"tree-props\":{children: 'children'}}},[_c('el-table-column',{attrs:{\"prop\":\"operationName_\",\"label\":\"方法名\",\"min-width\":\"90%\"}}),_c('el-table-column',{attrs:{\"prop\":\"cost\",\"label\":\"耗时（ms）\",\"min-width\":\"10%\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-header',[_c('h1',[_vm._v(_vm._s(_vm.rightTableTitle))])]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.rightTableDate,\"row-key\":\"spanId_\",\"border\":\"\",\"lazy\":\"\",\"default-expand-all\":\"\",\"tree-props\":{children: 'children'}}},[_c('el-table-column',{attrs:{\"prop\":\"operationName_\",\"label\":\"方法名\",\"min-width\":\"90%\"}}),_c('el-table-column',{attrs:{\"prop\":\"cost\",\"label\":\"耗时（ms）\",\"min-width\":\"10%\"}})],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <el-cascader :show-all-levels=\"false\"\n                 :props=\"props\"\n                 v-model=\"selectedOptions\"\n                 :options=\"cascaderOptions\"\n                 @change=\"handleCascaderChange\"\n                 clearable>\n\n    </el-cascader>\n    <el-row>\n      <el-col :span=\"12\">\n        <el-header>\n          <h1>{{ leftTableTitle }}</h1>\n        </el-header>\n        <el-table\n            :data=\"leftTableDate\"\n            style=\"width: 100%\"\n            row-key=\"spanId_\"\n            border\n            lazy\n            default-expand-all\n            :tree-props=\"{children: 'children'}\"\n        >\n          <el-table-column prop=\"operationName_\" label=\"方法名\" min-width=\"90%\"></el-table-column>\n          <el-table-column prop=\"cost\" label=\"耗时（ms）\" min-width=\"10%\"></el-table-column>\n        </el-table>\n      </el-col>\n\n      <el-col :span=\"12\">\n        <el-header>\n          <h1>{{ rightTableTitle }}</h1>\n        </el-header>\n        <el-table\n            :data=\"rightTableDate\"\n            style=\"width: 100%\"\n            row-key=\"spanId_\"\n            border\n            lazy\n            default-expand-all\n            :tree-props=\"{children: 'children'}\"\n        >\n          <el-table-column prop=\"operationName_\" label=\"方法名\" min-width=\"90%\"></el-table-column>\n          <el-table-column prop=\"cost\" label=\"耗时（ms）\" min-width=\"10%\"></el-table-column>\n        </el-table>\n      </el-col>\n    </el-row>\n\n    <!--    <el-table :data=\"tableData\" border style=\"width: 100%\">-->\n    <!--      <el-table-column label=\"指标\" width=\"180\">-->\n    <!--        <template slot-scope=\"scope\">-->\n    <!--          {{ scope.row['dubbo.protocol.serialization'] }}-->\n    <!--        </template>-->\n    <!--      </el-table-column>-->\n    <!--      <el-table-column>-->\n    <!--        <template slot-scope=\"{row}\">-->\n    <!--          <el-table-->\n    <!--              :data=\"createSpanTree(row.spans_)\"-->\n    <!--              style=\"width: 100%\"-->\n    <!--              row-key=\"spanId_\"-->\n    <!--              border-->\n    <!--              lazy-->\n    <!--              :tree-props=\"{children: 'children'}\"-->\n    <!--          >-->\n    <!--            <el-table-column prop=\"operationName_\" label=\"日期\"></el-table-column>-->\n    <!--            <el-table-column prop=\"cost\" label=\"耗时（ms）\"></el-table-column>-->\n    <!--          </el-table>-->\n    <!--        </template>-->\n    <!--      </el-table-column>-->\n    <!--    </el-table>-->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'TraceDetail',\n  data() {\n    return {\n      rpcTable: [],\n      serializationTable: [],\n      leftTableTitle: '',\n      leftTableDate: [],\n      rightTableDate: [],\n      rightTableTitle: '',\n\n      selectedOptions: [],\n      disabledRoots: [],\n      disabledChildren: [],\n      props: {multiple: true},\n      cascaderOptions: [{\n        value: 'rpc',\n        label: 'RPC 协议',\n        children: [{\n          value: 'dubbo',\n          label: 'Dubbo协议',\n        }, {\n          value: 'rmi',\n          label: 'Rmi协议'\n        }, {\n          value: 'tri',\n          label: 'Triple协议'\n        }]\n      }, {\n        value: 'serialization',\n        label: '序列化',\n        children: [{\n          value: 'hessian2',\n          label: 'Hessian2'\n        }, {\n          value: 'fastjson2',\n          label: 'Fastjson2'\n        },{\n          value: 'fastjson',\n          label: 'Fastjson'\n        },{\n          value: 'avro',\n          label: 'Avro'\n        },{\n          value: 'fst',\n          label: 'Fst'\n        },{\n          value: 'gson',\n          label: 'Gson'\n        },{\n          value: 'kryo',\n          label: 'Kryo'\n        }, {\n          value: 'msgpack',\n          label: 'Msgpack'\n        }]\n      }],\n      tmpCascaderOptions: [{\n        value: 'rpc',\n        label: 'RPC 协议',\n        children: [{\n          value: 'dubbo',\n          label: 'Dubbo协议',\n        }, {\n          value: 'rmi',\n          label: 'Rmi协议'\n        }, {\n          value: 'tri',\n          label: 'Triple协议'\n        }]\n      }, {\n        value: 'serialization',\n        label: '序列化',\n        children: [{\n          value: 'hessian2',\n          label: 'Hessian2'\n        }, {\n          value: 'fastjson2',\n          label: 'Fastjson2'\n        },{\n          value: 'fastjson',\n          label: 'Fastjson'\n        },{\n          value: 'avro',\n          label: 'Avro'\n        },{\n          value: 'fst',\n          label: 'Fst'\n        },{\n          value: 'gson',\n          label: 'Gson'\n        },{\n          value: 'kryo',\n          label: 'Kryo'\n        }, {\n          value: 'msgpack',\n          label: 'Msgpack'\n        }]\n      }]\n    };\n  },\n\n  mounted() {\n    this.initTable();\n  },\n\n  methods: {\n    initTable() {\n\n      let rpcResultList;\n      this.$.ajax({\n        type: \"GET\",\n        async: false,\n        url: \"https://raw.githubusercontent.com/wxbty/jmh_result/main/test-results/fixed/rpc/merged_prop_traces.json\",\n        success: function (res) {\n          rpcResultList = res\n        }\n      });\n\n      try {\n        this.rpcTable = JSON.parse(rpcResultList)\n        console.log(\"this.rpcTable\", this.rpcTable)\n      } catch (error) {\n        console.error(\"解析JMH结果字符串出错：\", error);\n      }\n\n      let serializationResultList;\n      this.$.ajax({\n        type: \"GET\",\n        async: false,\n        url: \"https://raw.githubusercontent.com/wxbty/jmh_result/main/test-results/fixed/serialization/merged_prop_traces.json\",\n        success: function (res) {\n          serializationResultList = res;\n        }\n      });\n\n      try {\n        this.serializationTable = JSON.parse(serializationResultList)\n        console.log(\"this.serializationResultList\", this.serializationTable)\n      } catch (error) {\n        console.error(\"解析JMH结果字符串出错：\", error);\n      }\n    }\n    ,\n\n    createSpanTree(spans) {\n      console.log(spans)\n      let spanMap = new Map();\n      let rootSpans = [];\n\n      // 遍历原始spans，初始化每个span，创建映射表和寻找根span\n      for (let span of spans) {\n        spanMap.set(span.spanId_, {\n          ...span,\n          spanId_: span.spanId_.toString(),\n          cost: span.endTime_ - span.startTime_,\n          children: []\n        });\n        if (span.parentSpanId_ === -1) {\n          rootSpans.push(spanMap.get(span.spanId_));\n        }\n      }\n\n      // 根据 parentSpanId_ 属性构建树结构\n      for (let span of spans) {\n        if (span.parentSpanId_ !== -1) {\n          let parentSpan = spanMap.get(span.parentSpanId_);\n          if (parentSpan) {\n            parentSpan.children.push(spanMap.get(span.spanId_));\n          }\n        }\n      }\n\n      console.log(rootSpans)\n      return rootSpans;\n    },\n\n    handleCascaderChange(value) {\n      console.log(\"this.value\", value)\n      console.log(\"this.selectedOptions\", this.selectedOptions)\n      let selectedRoot\n\n      this.cascaderOptions = this.deepCopy2DArray(this.tmpCascaderOptions)\n      if (value != null && value.length > 0) {\n        // 当用户选择一个根节点时，禁用其他根节点\n        selectedRoot = this.cascaderOptions.find(item => item.value === value[0][0]);\n      }\n\n      if (selectedRoot) {\n        this.disabledRoots = this.cascaderOptions\n            .filter(item => item.value !== selectedRoot.value)\n            .map(item => item.value);\n\n\n        if (value.length > 2) {\n\n          this.selectedOptions.splice(2)\n          value = this.selectedOptions\n          let myValue = value.map(item => item[1])\n          this.disabledChildren = selectedRoot.children.filter(((item, index) => index >= 2 && !myValue.includes(item.value))).map(item => item.value);\n\n        } else if (value.length === 2) {\n\n          let myValue = value.map(item => item[1])\n          this.disabledChildren = selectedRoot.children.filter(item => !myValue.includes(item.value)).map(item => item.value);\n\n        } else {\n\n          this.disabledChildren = []\n\n        }\n      } else {\n        // 如果用户取消了选择，或者选择了子节点，重置禁用状态\n        this.disabledRoots = [];\n        this.disabledChildren = []\n      }\n\n      this.updateCascaderOptions(selectedRoot);\n\n      this.updateTable();\n    },\n\n    updateCascaderOptions(selectedRoot) {\n      // 根据禁用状态数组，动态修改数据源\n      if (selectedRoot) {\n        selectedRoot.children = selectedRoot.children.map(item => ({\n          ...item,\n          disabled: this.disabledChildren.includes(item.value),\n        }));\n      }\n\n      this.cascaderOptions = this.cascaderOptions.map(item => ({\n        ...item,\n        disabled: this.disabledRoots.includes(item.value),\n      }));\n    },\n\n    deepCopy2DArray(arr) {\n      return JSON.parse(JSON.stringify(arr));\n    },\n\n    updateTable() {\n      if (this.selectedOptions == null || this.selectedOptions.length === 0) {\n        this.leftTableDate = []\n        this.rightTableDate = []\n\n        this.leftTableTitle = ''\n        this.rightTableTitle = ''\n\n        return\n      }\n\n      let type = this.selectedOptions[0][0];\n      let value = this.selectedOptions.map(item => item[1])\n\n      if (type === 'rpc') {\n        let leftRpcFilter = this.rpcTable.find(item => value[0] === item['dubbo.protocol.name']);\n        let rightRpcFilter = this.rpcTable.find(item => value[1] === item['dubbo.protocol.name']);\n\n        this.leftTableDate = leftRpcFilter ? this.createSpanTree(leftRpcFilter.spans_) : []\n        this.rightTableDate = rightRpcFilter ? this.createSpanTree(rightRpcFilter.spans_) : []\n\n        this.leftTableTitle = leftRpcFilter ? leftRpcFilter['dubbo.protocol.name'] : ''\n        this.rightTableTitle = rightRpcFilter ? rightRpcFilter['dubbo.protocol.name'] : ''\n      }\n\n      if (type === 'serialization') {\n        let leftSerializationFilter = this.serializationTable.find(item => value[0] === item['dubbo.protocol.serialization']);\n        let rightSerializationFilter = this.serializationTable.find(item => value[1] === item['dubbo.protocol.serialization']);\n\n        this.leftTableDate = leftSerializationFilter ? this.createSpanTree(leftSerializationFilter.spans_) : []\n        this.rightTableDate = rightSerializationFilter ? this.createSpanTree(rightSerializationFilter.spans_) : []\n\n        this.leftTableTitle = leftSerializationFilter ? leftSerializationFilter['dubbo.protocol.serialization'] : ''\n        this.rightTableTitle = rightSerializationFilter ? rightSerializationFilter['dubbo.protocol.serialization'] : ''\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TraceDetail.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TraceDetail.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./TraceDetail.vue?vue&type=template&id=90a84e78&scoped=true\"\nimport script from \"./TraceDetail.vue?vue&type=script&lang=js\"\nexport * from \"./TraceDetail.vue?vue&type=script&lang=js\"\nimport style0 from \"./TraceDetail.vue?vue&type=style&index=0&id=90a84e78&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"90a84e78\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"RpcTask\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <div id=\"RpcTask\" style=\"width:100%;height:400px\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RpcTask',\n  mounted() {\n    this.myEcharts();\n  },\n  methods: {\n    myEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      const myChart = this.$echarts.init(document.getElementById('RpcTask'));\n\n// const rpc = replaceVariables('$rpc');\n// const serialization = replaceVariables('$serialization');\n// console.log(rpc)\n// console.log(serialization)\n\n// 获取JMH结果字符串\n      let jmh;\n      this.$.ajax({\n        type: 'GET',\n        async: false,\n        url: 'https://raw.githubusercontent.com/wxbty/jmh_result/main/test-results/fixed/rpc/merged_prop_results.json',\n        success: function (res) {\n          jmh = res;\n        }\n      });\n\n// let filterSerialization = [\"hessian2\"]\n\n// let filterProtocol = [\"dubbo\"]\n\n// filterSerialization = serialization.replace(/{/g, '').replace(/}/g, '').split(',')\n// filterProtocol = rpc.replace(/{/g, '').replace(/}/g, '').split(',')\n\n// console.log(jmh);\n// 解析JMH结果字符串为JSON对象\n      let resultList;\n      try {\n        resultList = JSON.parse(jmh);\n      } catch (error) {\n        console.error('解析JMH结果字符串出错：', error);\n      }\n\n// 转换数据结构，按serialization属性分类并收集Item对象\n      let collect = resultList\n          .filter((a) => a.mode === 'avgt')\n          .map((result) => {\n            // 注意这里只用一个参数接收当前元素\n            let protocol = result.params['dubbo.protocol.name'];\n            return {\n              score: Math.round(result.primaryMetric.score),\n              protocol: protocol\n            };\n          });\n\n      // let seriesDate = collect.map((result) => {\n      //   // 注意这里只用一个参数接收当前元素\n      //   return {\n      //     type: 'bar'\n      //   };\n      // });\n      //\n      // console.log(collect);\n      // console.log(seriesDate);\n\n      let option = {\n        title: {\n          text: 'RPC对比',\n          x: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'none'\n          },\n          formatter: function (params) {\n            return params[0].data.score + 'ms';\n          }\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid: {\n          // top: '3%',\n          left: '3%',\n          right: '3%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category'\n        },\n        yAxis: {\n          type: 'value',\n          name: '耗时(ms)'\n        },\n        dataset: {\n          dimensions: ['protocol', 'score'],\n          source: collect\n        },\n        series: [\n          {\n            type: 'bar',\n            label: {\n              //柱体上显示数值\n              show: true, //开启显示\n              position: 'top', //在上方显示\n              textStyle: {\n                //数值样式\n                fontSize: '30px',\n                color: '#666'\n              },\n            }\n          }\n        ]\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RpcTask.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RpcTask.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./RpcTask.vue?vue&type=template&id=dd7a79f4&scoped=true\"\nimport script from \"./RpcTask.vue?vue&type=script&lang=js\"\nexport * from \"./RpcTask.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"dd7a79f4\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"400px\"},attrs:{\"id\":\"SerializationTask\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <div id=\"SerializationTask\" style=\"width:100%;height:400px\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SerializationTask',\n  mounted() {\n    this.myEcharts();\n  },\n  methods: {\n    myEcharts() {\n      // 基于准备好的dom，初始化echarts实例\n      const myChart = this.$echarts.init(document.getElementById('SerializationTask'));\n\n// const rpc = replaceVariables('$rpc');\n// const serialization = replaceVariables('$serialization');\n// console.log(rpc)\n// console.log(serialization)\n\n// 获取JMH结果字符串\n      let jmh;\n      this.$.ajax({\n        type: 'GET',\n        async: false,\n        url: 'https://raw.githubusercontent.com/wxbty/jmh_result/main/test-results/fixed/serialization/merged_prop_results.json',\n        success: function (res) {\n          jmh = res;\n        }\n      });\n\n// let filterSerialization = [\"hessian2\"]\n\n// let filterProtocol = [\"dubbo\"]\n\n// filterSerialization = serialization.replace(/{/g, '').replace(/}/g, '').split(',')\n// filterProtocol = rpc.replace(/{/g, '').replace(/}/g, '').split(',')\n\n// console.log(jmh);\n// 解析JMH结果字符串为JSON对象\n      let resultList;\n      try {\n        resultList = JSON.parse(jmh);\n      } catch (error) {\n        console.error('解析JMH结果字符串出错：', error);\n      }\n\n// 转换数据结构，按serialization属性分类并收集Item对象\n      let collect = resultList\n          .filter((a) => a.mode === 'avgt')\n          .map((result) => {\n            // 注意这里只用一个参数接收当前元素\n            let protocol = result.params['dubbo.protocol.serialization'];\n            return {\n              score: Math.round(result.primaryMetric.score),\n              protocol: protocol\n            };\n          });\n\n      // let seriesDate = collect.map((result) => {\n      //   // 注意这里只用一个参数接收当前元素\n      //   return {\n      //     type: 'bar'\n      //   };\n      // });\n      //\n      // console.log(collect);\n      // console.log(seriesDate);\n\n      let option = {\n        title: {\n          text: 'Serialization对比',\n          x: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'none'\n          },\n          formatter: function (params) {\n            return params[0].data.score + 'ms';\n          }\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid: {\n          // top: '3%',\n          left: '3%',\n          right: '3%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category'\n        },\n        yAxis: {\n          type: 'value',\n          name: '耗时(ms)'\n        },\n        dataset: {\n          dimensions: ['protocol', 'score'],\n          source: collect\n        },\n        series: [\n          {\n            type: 'bar',\n            label: {\n              //柱体上显示数值\n              show: true, //开启显示\n              position: 'top', //在上方显示\n              textStyle: {\n                //数值样式\n                fontSize: '30px',\n                color: '#666'\n              },\n            }\n          }\n        ]\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SerializationTask.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SerializationTask.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./SerializationTask.vue?vue&type=template&id=3e1f2d66&scoped=true\"\nimport script from \"./SerializationTask.vue?vue&type=script&lang=js\"\nexport * from \"./SerializationTask.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3e1f2d66\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <el-row>\n      <el-col :span=\"12\"><PullRequest></PullRequest></el-col>\n      <el-col :span=\"12\"><ScheduledTask></ScheduledTask></el-col>\n    </el-row>\n    <el-row>\n      <el-col :span=\"12\"><RpcTask></RpcTask></el-col>\n      <el-col :span=\"12\"><SerializationTask></SerializationTask></el-col>\n    </el-row>\n    <el-row>\n      <el-col :span=\"24\"><TraceDetail></TraceDetail></el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport PullRequest from \"@/components/PullRequest.vue\";\nimport ScheduledTask from \"@/components/ScheduledTask.vue\";\nimport TraceDetail from \"@/components/TraceDetail.vue\";\nimport RpcTask from \"@/components/RpcTask.vue\";\nimport SerializationTask from \"@/components/SerializationTask.vue\";\n\nconst debounce = (fn, delay) => {\n  let timer = null;\n  return function () {\n    let context = this;\n    let args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(context, args);\n    }, delay);\n  }\n}\n\nconst _ResizeObserver = window.ResizeObserver;\nwindow.ResizeObserver = class ResizeObserver extends _ResizeObserver {\n  constructor(callback) {\n    callback = debounce(callback, 16);\n    super(callback);\n  }\n}\nexport default {\n  name: 'App',\n  components: {\n    SerializationTask,\n    RpcTask,\n    TraceDetail,\n    ScheduledTask,\n    PullRequest\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  //margin-top: 60px;\n}\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=a7005dd8\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=a7005dd8&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nimport echarts from 'echarts'\nimport $ from 'jquery'\n\nVue.prototype.$=$\nVue.prototype.$echarts = echarts\n\nVue.use(ElementUI);\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdubbo_benchmark\"] = self[\"webpackChunkdubbo_benchmark\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(66697); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","attrs","staticRenderFns","_m","staticStyle","name","mounted","myEcharts","methods","myChart","$echarts","init","document","getElementById","jmh","resultList","$","ajax","type","async","url","success","res","JSON","parse","error","console","collect","filter","a","mode","reduce","acc","result","time","serialization","protocol","params","item","Number","score","Math","round","primaryMetric","key","push","templateList","formatDate","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","Object","entries","forEach","items","sortedItems","sort","b","map","i","seriesData","keys","data","index","value","showSymbol","hoverAnimation","symbolSize","markPoint","markLine","option","title","text","x","tooltip","trigger","formatter","axisValueLabel","marker","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","boundaryGap","yAxis","series","setOption","component","props","cascaderOptions","on","handleCascaderChange","model","selectedOptions","callback","$$v","expression","_v","_s","leftTableTitle","leftTableDate","children","rightTableTitle","rightTableDate","rpcTable","serializationTable","disabledRoots","disabledChildren","multiple","label","tmpCascaderOptions","initTable","rpcResultList","serializationResultList","log","createSpanTree","spans","spanMap","Map","rootSpans","span","set","spanId_","toString","cost","endTime_","startTime_","parentSpanId_","get","parentSpan","selectedRoot","deepCopy2DArray","length","find","splice","myValue","includes","updateCascaderOptions","updateTable","disabled","arr","stringify","leftRpcFilter","rightRpcFilter","spans_","leftSerializationFilter","rightSerializationFilter","axisPointer","dataset","dimensions","source","show","position","textStyle","fontSize","color","debounce","fn","delay","timer","context","args","arguments","clearTimeout","setTimeout","apply","_ResizeObserver","window","ResizeObserver","constructor","components","SerializationTask","RpcTask","TraceDetail","ScheduledTask","PullRequest","Vue","prototype","echarts","use","ElementUI","config","productionTip","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}